name: OpenFPGA CI

# Run CI on
# - each push
# - each pull request
# - scheduled weekly
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0 ' # weekly

# Environment variables
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  MAKE_FLAGS: "-j8"

# Multiple job to tests
jobs:
  # Test the compilation
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    # Branch on different OS and settings
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Build Compatibility: GCC-8 (Ubuntu 18.04)",
            artifact: "OpenFPGA-ubuntu-18.04-gcc8-build.7z",
            os: ubuntu-18.04,
            cc: "gcc-8", cxx: "g++-8"
          }

    # Define the steps to run the build job
    steps:
      - name: Checkout OpenFPGA repo
        uses: actions/checkout@v2

      - name: Install dependency
        run: source ./.github/workflows/install_dependency.sh 

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")
      
      - name: ccache cache files
        uses: actions/cache@v1.1.0
        with:
          path: .ccache
          key: ${{ matrix.config.name }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            ${{ matrix.config.name }}-ccache-

      - name: Create CMake build environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source 
        # and build directories, but this is only available with CMake 3.13 and higher.  
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: |
          set(ENV{CC} ${{ matrix.config.cc }})
          set(ENV{CXX} ${{ matrix.config.cxx }})
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE 

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ./${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}
